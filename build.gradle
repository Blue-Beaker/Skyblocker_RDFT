plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id 'maven-publish'
}

group = project.maven_group
version = project.mod_version
archivesBaseName = project.archives_base_name

repositories {
	jcenter()
	maven {
		url "https://maven.aliyun.com/nexus/content/groups/public/"
	}
	maven {
		url "https://maven.fabricmc.net/"
	}
	maven {
		url "https://maven.terraformersmc.com/releases/"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

	// Cloth API
	include "me.shedaniel.cloth:config-2:${project.cloth_api_version}"
	modApi("me.shedaniel.cloth:config-2:${project.cloth_api_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	// Auto Config
	include "me.sargunvohra.mcmods:autoconfig1u:${project.auto_config_version}"
	modApi("me.sargunvohra.mcmods:autoconfig1u:${project.auto_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	// Mod Menu
	modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8

	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(jar) {
				builtBy remapJar
			}
			artifact("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar"){
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {

	}
}
